mixin input-text(props)
	-
		var allMods = '';
		if(typeof(props.mods) !== 'undefined' && props.mods) {
			var modsList = props.mods.split(',');
			for (var i = 0; i < modsList.length; i++) {
				allMods = allMods + ' input-text--' + modsList[i].trim();
			}
		}
	.input-text(class= allMods)
		label.input-text__label(for= props.id)= props.text
			if(props.required)
				strong.input-text__required  *
		.input-text__wrap
			if(props.validateIcons)
				+icon('accept','input-text__validation-icon icon-valid')
				+icon('error','input-text__validation-icon icon-invalid')
			if(typeof(props.isTextarea) !== 'undefined' && props.isTextarea)
				if (props.required)
					textarea.input-text__input(name= props.name id= props.id aria-describedby= props.helpId placeholder= props.ph required)&attributes(attributes)
				else
					textarea.input-text__input(name= props.name id= props.id aria-describedby= props.helpId placeholder= props.ph)&attributes(attributes)
			else
				if (props.required)
					input.input-text__input(type= props.type name= props.name id= props.id aria-describedby= props.helpId placeholder= props.ph required)&attributes(attributes)
				else
					input.input-text__input(type= props.type name= props.name id= props.id aria-describedby= props.helpId placeholder= props.ph)&attributes(attributes)
		small.input-text__helper(id= props.helpId aria-live="polite")= props.helpText
